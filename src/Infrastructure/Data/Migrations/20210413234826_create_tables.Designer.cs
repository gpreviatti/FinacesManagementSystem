// <auto-generated />
using System;
using Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20210413234826_create_tables")]
    partial class create_tables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f804820a-2e8e-48ce-b589-27959490fe3b"),
                            CreatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 451, DateTimeKind.Local).AddTicks(5590),
                            Name = "Salary",
                            UpdatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 451, DateTimeKind.Local).AddTicks(5610)
                        },
                        new
                        {
                            Id = new Guid("e6cfad65-bba4-4262-ac28-3592835b9bd9"),
                            CreatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 451, DateTimeKind.Local).AddTicks(5661),
                            Name = "Loans",
                            UpdatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 451, DateTimeKind.Local).AddTicks(5662)
                        },
                        new
                        {
                            Id = new Guid("978c7423-78ae-4e16-bb1e-3d9604ac68e9"),
                            CreatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 451, DateTimeKind.Local).AddTicks(5666),
                            Name = "Other Earnings",
                            UpdatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 451, DateTimeKind.Local).AddTicks(5667)
                        },
                        new
                        {
                            Id = new Guid("02a33a98-ae20-4cab-8ce9-bb75c0287582"),
                            CreatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 451, DateTimeKind.Local).AddTicks(5671),
                            Name = "Investiments",
                            UpdatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 451, DateTimeKind.Local).AddTicks(5672)
                        },
                        new
                        {
                            Id = new Guid("a0788543-9f2d-481e-8db2-09c713507a04"),
                            CreatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 451, DateTimeKind.Local).AddTicks(5689),
                            Name = "Food",
                            UpdatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 451, DateTimeKind.Local).AddTicks(5691)
                        },
                        new
                        {
                            Id = new Guid("3ebb3280-93e1-4e43-b306-398eba1c4ac5"),
                            CreatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 451, DateTimeKind.Local).AddTicks(5704),
                            Name = "Transport",
                            UpdatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 451, DateTimeKind.Local).AddTicks(5717)
                        },
                        new
                        {
                            Id = new Guid("7f5c1293-7f9f-409b-9d8c-be8d8187a6f0"),
                            CreatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 451, DateTimeKind.Local).AddTicks(5721),
                            Name = "Services",
                            UpdatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 451, DateTimeKind.Local).AddTicks(5731)
                        },
                        new
                        {
                            Id = new Guid("a3089937-546e-4a3c-ac8e-6d34228d7455"),
                            CreatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 451, DateTimeKind.Local).AddTicks(5753),
                            Name = "Health",
                            UpdatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 451, DateTimeKind.Local).AddTicks(5755)
                        },
                        new
                        {
                            Id = new Guid("673dfe69-fe8a-4d9c-9ec0-3173021f62cb"),
                            CreatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 451, DateTimeKind.Local).AddTicks(5758),
                            Name = "Education",
                            UpdatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 451, DateTimeKind.Local).AddTicks(5760)
                        },
                        new
                        {
                            Id = new Guid("8122d82c-7d2f-486d-86b4-311ee208b776"),
                            CreatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 451, DateTimeKind.Local).AddTicks(5769),
                            Name = "Travel",
                            UpdatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 451, DateTimeKind.Local).AddTicks(5771)
                        },
                        new
                        {
                            Id = new Guid("8693c687-02dc-4769-a2e2-00e80d1fdb72"),
                            CreatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 451, DateTimeKind.Local).AddTicks(5775),
                            Name = "Work",
                            UpdatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 451, DateTimeKind.Local).AddTicks(5777)
                        },
                        new
                        {
                            Id = new Guid("1028b729-7145-41cd-b70c-d27c4de74213"),
                            CreatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 451, DateTimeKind.Local).AddTicks(5781),
                            Name = "Gifts",
                            UpdatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 451, DateTimeKind.Local).AddTicks(5783)
                        },
                        new
                        {
                            Id = new Guid("a71029a7-3f43-4378-a10c-40486e66f031"),
                            CreatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 451, DateTimeKind.Local).AddTicks(5792),
                            Name = "Industrials",
                            UpdatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 451, DateTimeKind.Local).AddTicks(5794)
                        },
                        new
                        {
                            Id = new Guid("6fe5ef3c-2d01-4e83-9fbf-98aff9c2d79d"),
                            CreatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 451, DateTimeKind.Local).AddTicks(5799),
                            Name = "Financials",
                            UpdatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 451, DateTimeKind.Local).AddTicks(5801)
                        },
                        new
                        {
                            Id = new Guid("c18933e8-6166-4be5-b4f2-341b70fd459e"),
                            CreatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 451, DateTimeKind.Local).AddTicks(5806),
                            Name = "Energy",
                            UpdatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 451, DateTimeKind.Local).AddTicks(5808)
                        },
                        new
                        {
                            Id = new Guid("9165e84b-8b53-45af-a580-2fae686a7550"),
                            CreatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 451, DateTimeKind.Local).AddTicks(5814),
                            Name = "Consumer Discretionary",
                            UpdatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 451, DateTimeKind.Local).AddTicks(5816)
                        },
                        new
                        {
                            Id = new Guid("00b780e5-a23a-4a3d-b8d0-49725437306a"),
                            CreatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 451, DateTimeKind.Local).AddTicks(5820),
                            Name = "Information Technology",
                            UpdatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 451, DateTimeKind.Local).AddTicks(5822)
                        },
                        new
                        {
                            Id = new Guid("995475e2-cb22-4c74-ad2e-c83dbaadd219"),
                            CreatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 451, DateTimeKind.Local).AddTicks(5830),
                            Name = "Communication Services",
                            UpdatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 451, DateTimeKind.Local).AddTicks(5860)
                        },
                        new
                        {
                            Id = new Guid("46669da6-1f4f-4a8a-b4f7-04328c720587"),
                            CreatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 451, DateTimeKind.Local).AddTicks(5872),
                            Name = "Real Estate",
                            UpdatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 451, DateTimeKind.Local).AddTicks(5874)
                        },
                        new
                        {
                            Id = new Guid("c9b23c6a-4840-4bcf-960b-0af5e2cc4a56"),
                            CreatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 451, DateTimeKind.Local).AddTicks(5879),
                            Name = "Health Care",
                            UpdatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 451, DateTimeKind.Local).AddTicks(5881)
                        },
                        new
                        {
                            Id = new Guid("a83decb6-5edf-4b9b-8aae-040eb255195d"),
                            CreatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 451, DateTimeKind.Local).AddTicks(5893),
                            Name = "Consumer Staples",
                            UpdatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 451, DateTimeKind.Local).AddTicks(5895)
                        },
                        new
                        {
                            Id = new Guid("3c53308d-a039-4e14-8ce6-8a609c6612af"),
                            CreatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 451, DateTimeKind.Local).AddTicks(5900),
                            Name = "Utilities",
                            UpdatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 451, DateTimeKind.Local).AddTicks(5902)
                        });
                });

            modelBuilder.Entity("Domain.Entities.Entrace", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Observation")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Ticker")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("WalletId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("WalletId");

                    b.ToTable("Entrace");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("430e0144-289f-4a95-8f14-bacfabb3fe8a"),
                            CreatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 211, DateTimeKind.Local).AddTicks(2245),
                            Email = "admin@admin.com",
                            Name = "Admin",
                            Password = "$2a$11$ia3SGHFexYRAYWYgA5CWQuM6EDeEH9zWaB/Vc.k8xrKw1TM92.85e",
                            UpdatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 212, DateTimeKind.Local).AddTicks(4624)
                        },
                        new
                        {
                            Id = new Guid("cb43d078-87f1-4864-853a-e626922b8109"),
                            CreatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 447, DateTimeKind.Local).AddTicks(6397),
                            Email = "testUser01@email.com",
                            Name = "Test-User-01",
                            Password = "$2a$11$7KYrNZXtckfCyrDFA8UgguMbCqUICDltEgJNcVF0QmeccTZzvrFFu",
                            UpdatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 447, DateTimeKind.Local).AddTicks(6432)
                        });
                });

            modelBuilder.Entity("Domain.Entities.Wallet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CloseDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("CurrentValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WalletTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("WalletTypeId");

                    b.ToTable("Wallet");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dc48ab84-505d-4095-a0c4-a0616809f570"),
                            CloseDate = new DateTime(2021, 4, 13, 20, 48, 24, 450, DateTimeKind.Local).AddTicks(5049),
                            CreatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 450, DateTimeKind.Local).AddTicks(6961),
                            CurrentValue = 500.0,
                            Description = "Main Account",
                            DueDate = new DateTime(2021, 4, 28, 20, 48, 24, 450, DateTimeKind.Local).AddTicks(5657),
                            Name = "Inter",
                            UpdatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 450, DateTimeKind.Local).AddTicks(6968),
                            UserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            WalletTypeId = new Guid("ad4ac47f-0888-4d60-81f9-964153b13e37")
                        });
                });

            modelBuilder.Entity("Domain.Entities.WalletType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("WalletType");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ad4ac47f-0888-4d60-81f9-964153b13e37"),
                            CreatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 449, DateTimeKind.Local).AddTicks(6909),
                            Name = "Checking Account",
                            UpdatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 449, DateTimeKind.Local).AddTicks(6931)
                        },
                        new
                        {
                            Id = new Guid("ad4ac47f-0888-4d60-81f9-964153b13e38"),
                            CreatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 449, DateTimeKind.Local).AddTicks(6970),
                            Name = "Credit",
                            UpdatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 449, DateTimeKind.Local).AddTicks(6971)
                        },
                        new
                        {
                            Id = new Guid("ad4ac47f-0888-4d60-81f9-964153b13e39"),
                            CreatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 449, DateTimeKind.Local).AddTicks(6976),
                            Name = "Saving",
                            UpdatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 449, DateTimeKind.Local).AddTicks(6977)
                        },
                        new
                        {
                            Id = new Guid("ad4ac47f-0888-4d60-81f9-964153b13e40"),
                            CreatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 449, DateTimeKind.Local).AddTicks(6981),
                            Name = "Investiments",
                            UpdatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 449, DateTimeKind.Local).AddTicks(6983)
                        },
                        new
                        {
                            Id = new Guid("ad4ac47f-0888-4d60-81f9-964153b13e41"),
                            CreatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 449, DateTimeKind.Local).AddTicks(6993),
                            Name = "Stocks",
                            UpdatedAt = new DateTime(2021, 4, 13, 20, 48, 24, 449, DateTimeKind.Local).AddTicks(6995)
                        });
                });

            modelBuilder.Entity("UserWallet", b =>
                {
                    b.Property<Guid>("UsersId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WalletsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UsersId", "WalletsId");

                    b.HasIndex("WalletsId");

                    b.ToTable("UserWallet");
                });

            modelBuilder.Entity("Domain.Entities.Category", b =>
                {
                    b.HasOne("Domain.Entities.User", null)
                        .WithMany("Categories")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Domain.Entities.Entrace", b =>
                {
                    b.HasOne("Domain.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Wallet", "Wallet")
                        .WithMany("Entraces")
                        .HasForeignKey("WalletId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("Domain.Entities.Wallet", b =>
                {
                    b.HasOne("Domain.Entities.WalletType", "WalletType")
                        .WithMany()
                        .HasForeignKey("WalletTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WalletType");
                });

            modelBuilder.Entity("UserWallet", b =>
                {
                    b.HasOne("Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Wallet", null)
                        .WithMany()
                        .HasForeignKey("WalletsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Navigation("Categories");
                });

            modelBuilder.Entity("Domain.Entities.Wallet", b =>
                {
                    b.Navigation("Entraces");
                });
#pragma warning restore 612, 618
        }
    }
}
