// <auto-generated />
using System;
using Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Data.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20210525104034_create_tables")]
    partial class create_tables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("18301de4-a10f-404e-8ce7-836f297382bb"),
                            CreatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 940, DateTimeKind.Local).AddTicks(8360),
                            Name = "Salary",
                            UpdatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 940, DateTimeKind.Local).AddTicks(8366)
                        },
                        new
                        {
                            Id = new Guid("18341de4-a10f-404e-8ce7-836f297382bb"),
                            CreatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 940, DateTimeKind.Local).AddTicks(8390),
                            Name = "Loans",
                            UpdatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 940, DateTimeKind.Local).AddTicks(8391)
                        },
                        new
                        {
                            Id = new Guid("18351de4-a10f-404e-8ce7-836f297382bb"),
                            CreatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 940, DateTimeKind.Local).AddTicks(8394),
                            Name = "Other Earnings",
                            UpdatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 940, DateTimeKind.Local).AddTicks(8405)
                        },
                        new
                        {
                            Id = new Guid("18361de4-a10f-404e-8ce7-836f297382bb"),
                            CreatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 940, DateTimeKind.Local).AddTicks(8429),
                            Name = "Investiments",
                            UpdatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 940, DateTimeKind.Local).AddTicks(8430)
                        },
                        new
                        {
                            Id = new Guid("18371de4-a10f-404e-8ce7-836f297382bb"),
                            CreatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 940, DateTimeKind.Local).AddTicks(8432),
                            Name = "Food",
                            UpdatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 940, DateTimeKind.Local).AddTicks(8433)
                        },
                        new
                        {
                            Id = new Guid("18381de4-a10f-404e-8ce7-836f297382bb"),
                            CreatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 940, DateTimeKind.Local).AddTicks(8438),
                            Name = "Transport",
                            UpdatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 940, DateTimeKind.Local).AddTicks(8439)
                        },
                        new
                        {
                            Id = new Guid("18391de4-a10f-404e-8ce7-836f297382bb"),
                            CreatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 940, DateTimeKind.Local).AddTicks(8441),
                            Name = "Services",
                            UpdatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 940, DateTimeKind.Local).AddTicks(8442)
                        },
                        new
                        {
                            Id = new Guid("18401de4-a10f-404e-8ce7-836f297382bb"),
                            CreatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 940, DateTimeKind.Local).AddTicks(8444),
                            Name = "Health",
                            UpdatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 940, DateTimeKind.Local).AddTicks(8445)
                        },
                        new
                        {
                            Id = new Guid("18411de4-a10f-404e-8ce7-836f297382bb"),
                            CreatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 940, DateTimeKind.Local).AddTicks(8448),
                            Name = "Education",
                            UpdatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 940, DateTimeKind.Local).AddTicks(8448)
                        },
                        new
                        {
                            Id = new Guid("18421de4-a10f-404e-8ce7-836f297382bb"),
                            CreatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 940, DateTimeKind.Local).AddTicks(8454),
                            Name = "Travel",
                            UpdatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 940, DateTimeKind.Local).AddTicks(8455)
                        },
                        new
                        {
                            Id = new Guid("18431de4-a10f-404e-8ce7-836f297382bb"),
                            CreatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 940, DateTimeKind.Local).AddTicks(8458),
                            Name = "Work",
                            UpdatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 940, DateTimeKind.Local).AddTicks(8459)
                        },
                        new
                        {
                            Id = new Guid("18441de4-a10f-404e-8ce7-836f297382bb"),
                            CreatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 940, DateTimeKind.Local).AddTicks(8461),
                            Name = "Gifts",
                            UpdatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 940, DateTimeKind.Local).AddTicks(8462)
                        },
                        new
                        {
                            Id = new Guid("18451de4-a10f-404e-8ce7-836f297382bb"),
                            CreatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 940, DateTimeKind.Local).AddTicks(8468),
                            Name = "Home",
                            UpdatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 940, DateTimeKind.Local).AddTicks(8469)
                        },
                        new
                        {
                            Id = new Guid("18461de4-a10f-404e-8ce7-836f297382bb"),
                            CreatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 940, DateTimeKind.Local).AddTicks(8472),
                            Name = "Other Expanses",
                            UpdatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 940, DateTimeKind.Local).AddTicks(8473)
                        });
                });

            modelBuilder.Entity("Domain.Entities.Entrance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Observation")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Ticker")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.Property<Guid>("WalletId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("WalletId");

                    b.HasIndex("Id", "CategoryId")
                        .IsClustered(false);

                    b.ToTable("Entrances");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d5e73088-6288-48ce-880f-d67cdc6a0ba8"),
                            CategoryId = new Guid("18451de4-a10f-404e-8ce7-836f297382bb"),
                            CreatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 941, DateTimeKind.Local).AddTicks(5364),
                            Description = "Lorem Ipsum",
                            Observation = "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
                            Type = 1,
                            UpdatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 941, DateTimeKind.Local).AddTicks(5370),
                            Value = 810.0,
                            WalletId = new Guid("042cc3ad-2159-4b8e-894e-e700a121b48f")
                        },
                        new
                        {
                            Id = new Guid("8b117284-3b94-4a89-a5b0-320ba8d5bcbe"),
                            CategoryId = new Guid("18451de4-a10f-404e-8ce7-836f297382bb"),
                            CreatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 941, DateTimeKind.Local).AddTicks(5407),
                            Description = "Lorem Ipsum",
                            Observation = "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
                            Type = 1,
                            UpdatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 941, DateTimeKind.Local).AddTicks(5408),
                            Value = 796.0,
                            WalletId = new Guid("041cc3ad-2159-4b8e-894e-e700a121b48f")
                        },
                        new
                        {
                            Id = new Guid("1014f49a-7507-4276-ae98-16083fd1ccdc"),
                            CategoryId = new Guid("18381de4-a10f-404e-8ce7-836f297382bb"),
                            CreatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 941, DateTimeKind.Local).AddTicks(5438),
                            Description = "Lorem Ipsum",
                            Observation = "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
                            Type = 1,
                            UpdatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 941, DateTimeKind.Local).AddTicks(5439),
                            Value = 755.0,
                            WalletId = new Guid("042cc3ad-2159-4b8e-894e-e700a121b48f")
                        },
                        new
                        {
                            Id = new Guid("5f30bc11-8428-490e-98ea-221a54c5fdb3"),
                            CategoryId = new Guid("18371de4-a10f-404e-8ce7-836f297382bb"),
                            CreatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 941, DateTimeKind.Local).AddTicks(5444),
                            Description = "Lorem Ipsum",
                            Observation = "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
                            Type = 2,
                            UpdatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 941, DateTimeKind.Local).AddTicks(5445),
                            Value = 545.0,
                            WalletId = new Guid("040cc3ad-2159-4b8e-894e-e700a121b48f")
                        },
                        new
                        {
                            Id = new Guid("03bddc72-b67f-47ef-9767-51fc9ab24511"),
                            CategoryId = new Guid("18371de4-a10f-404e-8ce7-836f297382bb"),
                            CreatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 941, DateTimeKind.Local).AddTicks(5449),
                            Description = "Lorem Ipsum",
                            Observation = "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
                            Type = 1,
                            UpdatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 941, DateTimeKind.Local).AddTicks(5450),
                            Value = 733.0,
                            WalletId = new Guid("041cc3ad-2159-4b8e-894e-e700a121b48f")
                        },
                        new
                        {
                            Id = new Guid("7350c925-3a69-4f15-98e4-eb6a1606c948"),
                            CategoryId = new Guid("18461de4-a10f-404e-8ce7-836f297382bb"),
                            CreatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 941, DateTimeKind.Local).AddTicks(5457),
                            Description = "Lorem Ipsum",
                            Observation = "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
                            Type = 1,
                            UpdatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 941, DateTimeKind.Local).AddTicks(5458),
                            Value = 823.0,
                            WalletId = new Guid("042cc3ad-2159-4b8e-894e-e700a121b48f")
                        },
                        new
                        {
                            Id = new Guid("9e82792b-4c5b-4a5a-98d7-121a06111a53"),
                            CategoryId = new Guid("18371de4-a10f-404e-8ce7-836f297382bb"),
                            CreatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 941, DateTimeKind.Local).AddTicks(5463),
                            Description = "Lorem Ipsum",
                            Observation = "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
                            Type = 1,
                            UpdatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 941, DateTimeKind.Local).AddTicks(5463),
                            Value = 152.0,
                            WalletId = new Guid("040cc3ad-2159-4b8e-894e-e700a121b48f")
                        },
                        new
                        {
                            Id = new Guid("ffc2decc-7a3a-4a5d-bcf0-47683e49250e"),
                            CategoryId = new Guid("18461de4-a10f-404e-8ce7-836f297382bb"),
                            CreatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 941, DateTimeKind.Local).AddTicks(5473),
                            Description = "Lorem Ipsum",
                            Observation = "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
                            Type = 1,
                            UpdatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 941, DateTimeKind.Local).AddTicks(5474),
                            Value = 590.0,
                            WalletId = new Guid("042cc3ad-2159-4b8e-894e-e700a121b48f")
                        },
                        new
                        {
                            Id = new Guid("080d03ab-ce30-41ad-a243-598f800bdba7"),
                            CategoryId = new Guid("18371de4-a10f-404e-8ce7-836f297382bb"),
                            CreatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 941, DateTimeKind.Local).AddTicks(5478),
                            Description = "Lorem Ipsum",
                            Observation = "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
                            Type = 1,
                            UpdatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 941, DateTimeKind.Local).AddTicks(5479),
                            Value = 608.0,
                            WalletId = new Guid("041cc3ad-2159-4b8e-894e-e700a121b48f")
                        },
                        new
                        {
                            Id = new Guid("a41e79dc-c28a-4a23-984d-f95a873583a6"),
                            CategoryId = new Guid("18401de4-a10f-404e-8ce7-836f297382bb"),
                            CreatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 941, DateTimeKind.Local).AddTicks(5485),
                            Description = "Lorem Ipsum",
                            Observation = "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
                            Type = 1,
                            UpdatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 941, DateTimeKind.Local).AddTicks(5486),
                            Value = 197.0,
                            WalletId = new Guid("040cc3ad-2159-4b8e-894e-e700a121b48f")
                        });
                });

            modelBuilder.Entity("Domain.Entities.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Exception")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Level")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MessageTemplate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Propperties")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimeStamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 5, 25, 7, 40, 32, 651, DateTimeKind.Local).AddTicks(9684));

                    b.HasKey("Id");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("430e0144-289f-4a95-8f14-bacfabb3fe8a"),
                            CreatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 800, DateTimeKind.Local).AddTicks(8161),
                            Email = "admin@admin.com",
                            Name = "Admin",
                            Password = "$2a$11$Vb4cA74Itap3Q0Gw5hE0Fu906gzT..1fzxLDM5DfhnUs6TBx3Tks.",
                            UpdatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 800, DateTimeKind.Local).AddTicks(8701)
                        },
                        new
                        {
                            Id = new Guid("cb43d078-87f1-4864-853a-e626922b8109"),
                            CreatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 937, DateTimeKind.Local).AddTicks(9139),
                            Email = "testUser01@email.com",
                            Name = "Test-User-01",
                            Password = "$2a$11$wjZSiUSOHjWWSXb.KQWf7.znSyuF9pHRWZU4GuhsHtS5lrQgn9XTC",
                            UpdatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 937, DateTimeKind.Local).AddTicks(9167)
                        });
                });

            modelBuilder.Entity("Domain.Entities.Wallet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CloseDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("CurrentValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WalletTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("WalletTypeId");

                    b.ToTable("Wallets");

                    b.HasData(
                        new
                        {
                            Id = new Guid("040cc3ad-2159-4b8e-894e-e700a121b48f"),
                            CloseDate = new DateTime(2021, 5, 25, 7, 40, 32, 940, DateTimeKind.Local).AddTicks(2774),
                            CreatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 940, DateTimeKind.Local).AddTicks(3584),
                            CurrentValue = 500.0,
                            Description = "Main Account",
                            DueDate = new DateTime(2021, 6, 9, 7, 40, 32, 940, DateTimeKind.Local).AddTicks(3131),
                            Name = "Main Card",
                            UpdatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 940, DateTimeKind.Local).AddTicks(3588),
                            UserId = new Guid("430e0144-289f-4a95-8f14-bacfabb3fe8a"),
                            WalletTypeId = new Guid("ad4ac47f-0888-4d60-81f9-964153b13e37")
                        },
                        new
                        {
                            Id = new Guid("041cc3ad-2159-4b8e-894e-e700a121b48f"),
                            CloseDate = new DateTime(2021, 5, 25, 7, 40, 32, 940, DateTimeKind.Local).AddTicks(3617),
                            CreatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 940, DateTimeKind.Local).AddTicks(3624),
                            CurrentValue = 500.0,
                            Description = "Credit Card Account",
                            DueDate = new DateTime(2021, 6, 9, 7, 40, 32, 940, DateTimeKind.Local).AddTicks(3618),
                            Name = "Credit",
                            UpdatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 940, DateTimeKind.Local).AddTicks(3625),
                            UserId = new Guid("430e0144-289f-4a95-8f14-bacfabb3fe8a"),
                            WalletTypeId = new Guid("ad4ac47f-0888-4d60-81f9-964153b13e38")
                        },
                        new
                        {
                            Id = new Guid("042cc3ad-2159-4b8e-894e-e700a121b48f"),
                            CloseDate = new DateTime(2021, 5, 25, 7, 40, 32, 940, DateTimeKind.Local).AddTicks(3630),
                            CreatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 940, DateTimeKind.Local).AddTicks(3632),
                            CurrentValue = 1000.0,
                            Description = "My Savings",
                            DueDate = new DateTime(2021, 6, 9, 7, 40, 32, 940, DateTimeKind.Local).AddTicks(3631),
                            Name = "Saving",
                            UpdatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 940, DateTimeKind.Local).AddTicks(3633),
                            UserId = new Guid("430e0144-289f-4a95-8f14-bacfabb3fe8a"),
                            WalletTypeId = new Guid("ad4ac47f-0888-4d60-81f9-964153b13e39")
                        });
                });

            modelBuilder.Entity("Domain.Entities.WalletType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("WalletTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ad4ac47f-0888-4d60-81f9-964153b13e37"),
                            CreatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 939, DateTimeKind.Local).AddTicks(5058),
                            Name = "Checking Account",
                            UpdatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 939, DateTimeKind.Local).AddTicks(5070)
                        },
                        new
                        {
                            Id = new Guid("ad4ac47f-0888-4d60-81f9-964153b13e38"),
                            CreatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 939, DateTimeKind.Local).AddTicks(5512),
                            Name = "Credit",
                            UpdatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 939, DateTimeKind.Local).AddTicks(5516)
                        },
                        new
                        {
                            Id = new Guid("ad4ac47f-0888-4d60-81f9-964153b13e39"),
                            CreatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 939, DateTimeKind.Local).AddTicks(5903),
                            Name = "Saving",
                            UpdatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 939, DateTimeKind.Local).AddTicks(5907)
                        },
                        new
                        {
                            Id = new Guid("ad4ac47f-0888-4d60-81f9-964153b13e40"),
                            CreatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 939, DateTimeKind.Local).AddTicks(6277),
                            Name = "Investiments",
                            UpdatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 939, DateTimeKind.Local).AddTicks(6280)
                        },
                        new
                        {
                            Id = new Guid("ad4ac47f-0888-4d60-81f9-964153b13e41"),
                            CreatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 939, DateTimeKind.Local).AddTicks(6641),
                            Name = "Stocks",
                            UpdatedAt = new DateTime(2021, 5, 25, 7, 40, 32, 939, DateTimeKind.Local).AddTicks(6645)
                        });
                });

            modelBuilder.Entity("Domain.Entities.Category", b =>
                {
                    b.HasOne("Domain.Entities.Category", "CustomCategory")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("Categories")
                        .HasForeignKey("UserId");

                    b.Navigation("CustomCategory");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Entrance", b =>
                {
                    b.HasOne("Domain.Entities.Category", "Category")
                        .WithMany("Entrances")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Wallet", "Wallet")
                        .WithMany("Entrances")
                        .HasForeignKey("WalletId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("Domain.Entities.Wallet", b =>
                {
                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("Wallets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.WalletType", "WalletType")
                        .WithMany("Wallets")
                        .HasForeignKey("WalletTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("WalletType");
                });

            modelBuilder.Entity("Domain.Entities.Category", b =>
                {
                    b.Navigation("Entrances");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Wallets");
                });

            modelBuilder.Entity("Domain.Entities.Wallet", b =>
                {
                    b.Navigation("Entrances");
                });

            modelBuilder.Entity("Domain.Entities.WalletType", b =>
                {
                    b.Navigation("Wallets");
                });
#pragma warning restore 612, 618
        }
    }
}
