// <auto-generated />
using System;
using Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Data.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20210501145545_create_tables")]
    partial class create_tables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0ea381c4-3955-46b2-9642-65602e338f3a"),
                            CreatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 723, DateTimeKind.Local).AddTicks(4404),
                            Name = "Salary",
                            UpdatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 723, DateTimeKind.Local).AddTicks(4409)
                        },
                        new
                        {
                            Id = new Guid("4849827a-3419-4820-8638-43c40bc6a83c"),
                            CreatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 723, DateTimeKind.Local).AddTicks(4427),
                            Name = "Loans",
                            UpdatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 723, DateTimeKind.Local).AddTicks(4428)
                        },
                        new
                        {
                            Id = new Guid("a6b9744a-1923-4eae-ac83-5848da07714c"),
                            CreatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 723, DateTimeKind.Local).AddTicks(4430),
                            Name = "Other Earnings",
                            UpdatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 723, DateTimeKind.Local).AddTicks(4431)
                        },
                        new
                        {
                            Id = new Guid("dd292047-fb69-4970-9908-3671488f62ef"),
                            CreatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 723, DateTimeKind.Local).AddTicks(4432),
                            Name = "Investiments",
                            UpdatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 723, DateTimeKind.Local).AddTicks(4433)
                        },
                        new
                        {
                            Id = new Guid("70b5f1fe-5f29-422b-b75b-0ac5b0ea582e"),
                            CreatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 723, DateTimeKind.Local).AddTicks(4434),
                            Name = "Food",
                            UpdatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 723, DateTimeKind.Local).AddTicks(4435)
                        },
                        new
                        {
                            Id = new Guid("9a4f1f28-8534-488e-9767-22d7128729ae"),
                            CreatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 723, DateTimeKind.Local).AddTicks(4450),
                            Name = "Transport",
                            UpdatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 723, DateTimeKind.Local).AddTicks(4451)
                        },
                        new
                        {
                            Id = new Guid("4f351c55-3892-42ba-958e-f4c763f739cd"),
                            CreatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 723, DateTimeKind.Local).AddTicks(4453),
                            Name = "Services",
                            UpdatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 723, DateTimeKind.Local).AddTicks(4453)
                        },
                        new
                        {
                            Id = new Guid("37442197-62b1-4f6d-a819-afc4fb7724c6"),
                            CreatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 723, DateTimeKind.Local).AddTicks(4455),
                            Name = "Health",
                            UpdatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 723, DateTimeKind.Local).AddTicks(4456)
                        },
                        new
                        {
                            Id = new Guid("7f8a8eaf-c152-4e5d-ac10-8c1677704628"),
                            CreatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 723, DateTimeKind.Local).AddTicks(4457),
                            Name = "Education",
                            UpdatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 723, DateTimeKind.Local).AddTicks(4458)
                        },
                        new
                        {
                            Id = new Guid("9245f61b-85cd-4ea4-9554-7006afaf84ac"),
                            CreatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 723, DateTimeKind.Local).AddTicks(4460),
                            Name = "Travel",
                            UpdatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 723, DateTimeKind.Local).AddTicks(4461)
                        },
                        new
                        {
                            Id = new Guid("c229e41c-24c4-44bc-80d1-6d573eb3d0c1"),
                            CreatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 723, DateTimeKind.Local).AddTicks(4497),
                            Name = "Work",
                            UpdatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 723, DateTimeKind.Local).AddTicks(4498)
                        },
                        new
                        {
                            Id = new Guid("d7d072fd-8e6c-460d-83e5-2e2986e02840"),
                            CreatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 723, DateTimeKind.Local).AddTicks(4499),
                            Name = "Gifts",
                            UpdatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 723, DateTimeKind.Local).AddTicks(4500)
                        },
                        new
                        {
                            Id = new Guid("7016a053-d5fb-47bb-b78a-dccdb7705eae"),
                            CreatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 723, DateTimeKind.Local).AddTicks(4501),
                            Name = "Industrials",
                            UpdatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 723, DateTimeKind.Local).AddTicks(4502)
                        },
                        new
                        {
                            Id = new Guid("57a4a78b-8349-432b-9c25-caa731a4727c"),
                            CreatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 723, DateTimeKind.Local).AddTicks(4505),
                            Name = "Financials",
                            UpdatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 723, DateTimeKind.Local).AddTicks(4506)
                        },
                        new
                        {
                            Id = new Guid("bde6e8b1-5e9b-46d7-872b-5ceb636b78d2"),
                            CreatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 723, DateTimeKind.Local).AddTicks(4507),
                            Name = "Energy",
                            UpdatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 723, DateTimeKind.Local).AddTicks(4508)
                        },
                        new
                        {
                            Id = new Guid("b95f09f8-55e6-444f-8383-3e33f7536ead"),
                            CreatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 723, DateTimeKind.Local).AddTicks(4509),
                            Name = "Consumer Discretionary",
                            UpdatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 723, DateTimeKind.Local).AddTicks(4510)
                        },
                        new
                        {
                            Id = new Guid("fedde108-d1d7-43a7-ac9e-2fcb14524633"),
                            CreatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 723, DateTimeKind.Local).AddTicks(4511),
                            Name = "Information Technology",
                            UpdatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 723, DateTimeKind.Local).AddTicks(4512)
                        },
                        new
                        {
                            Id = new Guid("058e6276-dea4-4e9f-b2ce-111cacf8352b"),
                            CreatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 723, DateTimeKind.Local).AddTicks(4515),
                            Name = "Communication Services",
                            UpdatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 723, DateTimeKind.Local).AddTicks(4515)
                        },
                        new
                        {
                            Id = new Guid("06aa7076-f187-4500-886c-6a5c835a0f14"),
                            CreatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 723, DateTimeKind.Local).AddTicks(4517),
                            Name = "Real Estate",
                            UpdatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 723, DateTimeKind.Local).AddTicks(4517)
                        },
                        new
                        {
                            Id = new Guid("76ba6c58-3f27-4866-8973-24ee19de784a"),
                            CreatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 723, DateTimeKind.Local).AddTicks(4519),
                            Name = "Health Care",
                            UpdatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 723, DateTimeKind.Local).AddTicks(4520)
                        },
                        new
                        {
                            Id = new Guid("ba1adaf5-6bc0-4561-b3d9-332a4acf22b6"),
                            CreatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 723, DateTimeKind.Local).AddTicks(4521),
                            Name = "Consumer Staples",
                            UpdatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 723, DateTimeKind.Local).AddTicks(4522)
                        },
                        new
                        {
                            Id = new Guid("06591ed3-e393-484b-ae85-da4bffb45fb2"),
                            CreatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 723, DateTimeKind.Local).AddTicks(4525),
                            Name = "Utilities",
                            UpdatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 723, DateTimeKind.Local).AddTicks(4526)
                        });
                });

            modelBuilder.Entity("Domain.Entities.Entrance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Observation")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Ticker")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.Property<Guid>("WalletId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("WalletId");

                    b.ToTable("Entrances");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("430e0144-289f-4a95-8f14-bacfabb3fe8a"),
                            CreatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 591, DateTimeKind.Local).AddTicks(389),
                            Email = "admin@admin.com",
                            Name = "Admin",
                            Password = "$2a$11$Qma.mDclcg9ChOY2y.PzOuf/JZ8G1KHoxSRoukp2wonSG2lYu1i12",
                            UpdatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 591, DateTimeKind.Local).AddTicks(8711)
                        },
                        new
                        {
                            Id = new Guid("cb43d078-87f1-4864-853a-e626922b8109"),
                            CreatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 720, DateTimeKind.Local).AddTicks(7439),
                            Email = "testUser01@email.com",
                            Name = "Test-User-01",
                            Password = "$2a$11$0OMcWwg1xp4qcAEi7I566e/6mkoCRcFjAvW.IF0vJI1zGtAJFSrye",
                            UpdatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 720, DateTimeKind.Local).AddTicks(7467)
                        });
                });

            modelBuilder.Entity("Domain.Entities.Wallet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CloseDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("CurrentValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WalletTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("WalletTypeId");

                    b.ToTable("Wallets");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b7b68314-e2a6-4200-8299-f6076824d690"),
                            CloseDate = new DateTime(2021, 5, 1, 11, 55, 43, 722, DateTimeKind.Local).AddTicks(9167),
                            CreatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 722, DateTimeKind.Local).AddTicks(9827),
                            CurrentValue = 500.0,
                            Description = "Main Account",
                            DueDate = new DateTime(2021, 5, 16, 11, 55, 43, 722, DateTimeKind.Local).AddTicks(9451),
                            Name = "Inter",
                            UpdatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 722, DateTimeKind.Local).AddTicks(9830),
                            UserId = new Guid("430e0144-289f-4a95-8f14-bacfabb3fe8a"),
                            WalletTypeId = new Guid("ad4ac47f-0888-4d60-81f9-964153b13e37")
                        },
                        new
                        {
                            Id = new Guid("1e6942cd-adce-4f4c-95c7-6e3176a48619"),
                            CloseDate = new DateTime(2021, 5, 1, 11, 55, 43, 722, DateTimeKind.Local).AddTicks(9857),
                            CreatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 722, DateTimeKind.Local).AddTicks(9863),
                            CurrentValue = 500.0,
                            Description = "Credit Card Account",
                            DueDate = new DateTime(2021, 5, 16, 11, 55, 43, 722, DateTimeKind.Local).AddTicks(9858),
                            Name = "Credit",
                            UpdatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 722, DateTimeKind.Local).AddTicks(9863),
                            UserId = new Guid("430e0144-289f-4a95-8f14-bacfabb3fe8a"),
                            WalletTypeId = new Guid("ad4ac47f-0888-4d60-81f9-964153b13e38")
                        });
                });

            modelBuilder.Entity("Domain.Entities.WalletType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("WalletTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ad4ac47f-0888-4d60-81f9-964153b13e37"),
                            CreatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 722, DateTimeKind.Local).AddTicks(2548),
                            Name = "Checking Account",
                            UpdatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 722, DateTimeKind.Local).AddTicks(2558)
                        },
                        new
                        {
                            Id = new Guid("ad4ac47f-0888-4d60-81f9-964153b13e38"),
                            CreatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 722, DateTimeKind.Local).AddTicks(3082),
                            Name = "Credit",
                            UpdatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 722, DateTimeKind.Local).AddTicks(3085)
                        },
                        new
                        {
                            Id = new Guid("ad4ac47f-0888-4d60-81f9-964153b13e39"),
                            CreatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 722, DateTimeKind.Local).AddTicks(3391),
                            Name = "Saving",
                            UpdatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 722, DateTimeKind.Local).AddTicks(3394)
                        },
                        new
                        {
                            Id = new Guid("ad4ac47f-0888-4d60-81f9-964153b13e40"),
                            CreatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 722, DateTimeKind.Local).AddTicks(3697),
                            Name = "Investiments",
                            UpdatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 722, DateTimeKind.Local).AddTicks(3699)
                        },
                        new
                        {
                            Id = new Guid("ad4ac47f-0888-4d60-81f9-964153b13e41"),
                            CreatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 722, DateTimeKind.Local).AddTicks(3979),
                            Name = "Stocks",
                            UpdatedAt = new DateTime(2021, 5, 1, 11, 55, 43, 722, DateTimeKind.Local).AddTicks(3982)
                        });
                });

            modelBuilder.Entity("Domain.Entities.Category", b =>
                {
                    b.HasOne("Domain.Entities.Category", "CustomCategory")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("Categories")
                        .HasForeignKey("UserId");

                    b.Navigation("CustomCategory");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Entrance", b =>
                {
                    b.HasOne("Domain.Entities.Category", "Category")
                        .WithMany("Entrances")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Wallet", "Wallet")
                        .WithMany("Entrances")
                        .HasForeignKey("WalletId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("Domain.Entities.Wallet", b =>
                {
                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("Wallets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.WalletType", "WalletType")
                        .WithMany("Wallets")
                        .HasForeignKey("WalletTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("WalletType");
                });

            modelBuilder.Entity("Domain.Entities.Category", b =>
                {
                    b.Navigation("Entrances");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Wallets");
                });

            modelBuilder.Entity("Domain.Entities.Wallet", b =>
                {
                    b.Navigation("Entrances");
                });

            modelBuilder.Entity("Domain.Entities.WalletType", b =>
                {
                    b.Navigation("Wallets");
                });
#pragma warning restore 612, 618
        }
    }
}
