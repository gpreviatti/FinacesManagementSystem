// <auto-generated />
using System;
using Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Data.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20210415142809_create_users_seeders")]
    partial class create_users_seeders
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dcfb5a27-37a4-4755-866c-7aaa589ab33b"),
                            CreatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 269, DateTimeKind.Local).AddTicks(3606),
                            Name = "Salary",
                            UpdatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 269, DateTimeKind.Local).AddTicks(3610)
                        },
                        new
                        {
                            Id = new Guid("0a902991-c8c1-400b-af79-80d93123d1d3"),
                            CreatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 269, DateTimeKind.Local).AddTicks(3626),
                            Name = "Loans",
                            UpdatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 269, DateTimeKind.Local).AddTicks(3627)
                        },
                        new
                        {
                            Id = new Guid("37da63e3-908c-439f-9612-0258631f37f9"),
                            CreatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 269, DateTimeKind.Local).AddTicks(3629),
                            Name = "Other Earnings",
                            UpdatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 269, DateTimeKind.Local).AddTicks(3630)
                        },
                        new
                        {
                            Id = new Guid("8282e02e-baeb-4fae-bdb4-499f21b2261c"),
                            CreatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 269, DateTimeKind.Local).AddTicks(3642),
                            Name = "Investiments",
                            UpdatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 269, DateTimeKind.Local).AddTicks(3643)
                        },
                        new
                        {
                            Id = new Guid("2a56a85c-1fe1-46ea-b79c-456c22e68612"),
                            CreatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 269, DateTimeKind.Local).AddTicks(3644),
                            Name = "Food",
                            UpdatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 269, DateTimeKind.Local).AddTicks(3645)
                        },
                        new
                        {
                            Id = new Guid("e2fc1e93-0640-492e-a644-fa0163c9467b"),
                            CreatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 269, DateTimeKind.Local).AddTicks(3697),
                            Name = "Transport",
                            UpdatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 269, DateTimeKind.Local).AddTicks(3698)
                        },
                        new
                        {
                            Id = new Guid("aaafa2a4-61de-4e0e-bfc7-6c5824aff8ea"),
                            CreatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 269, DateTimeKind.Local).AddTicks(3699),
                            Name = "Services",
                            UpdatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 269, DateTimeKind.Local).AddTicks(3700)
                        },
                        new
                        {
                            Id = new Guid("de229014-5550-458c-8dbb-dadbf828ceb0"),
                            CreatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 269, DateTimeKind.Local).AddTicks(3701),
                            Name = "Health",
                            UpdatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 269, DateTimeKind.Local).AddTicks(3702)
                        },
                        new
                        {
                            Id = new Guid("d7982c1e-0c8a-4e3d-8feb-a90d0ffcd48c"),
                            CreatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 269, DateTimeKind.Local).AddTicks(3703),
                            Name = "Education",
                            UpdatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 269, DateTimeKind.Local).AddTicks(3704)
                        },
                        new
                        {
                            Id = new Guid("df699c6b-7f81-4e53-abad-bab6536f1c6b"),
                            CreatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 269, DateTimeKind.Local).AddTicks(3706),
                            Name = "Travel",
                            UpdatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 269, DateTimeKind.Local).AddTicks(3707)
                        },
                        new
                        {
                            Id = new Guid("0ec84ffd-6d2f-40fb-be49-aca36c8d8287"),
                            CreatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 269, DateTimeKind.Local).AddTicks(3708),
                            Name = "Work",
                            UpdatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 269, DateTimeKind.Local).AddTicks(3709)
                        },
                        new
                        {
                            Id = new Guid("0b3dd7c7-b5f3-4956-af95-d2993797855d"),
                            CreatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 269, DateTimeKind.Local).AddTicks(3712),
                            Name = "Gifts",
                            UpdatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 269, DateTimeKind.Local).AddTicks(3713)
                        },
                        new
                        {
                            Id = new Guid("08a005bb-7326-4f67-9b6c-9d1fb3be59f5"),
                            CreatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 269, DateTimeKind.Local).AddTicks(3714),
                            Name = "Industrials",
                            UpdatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 269, DateTimeKind.Local).AddTicks(3715)
                        },
                        new
                        {
                            Id = new Guid("69601097-053b-4185-8de4-96c540c09c7d"),
                            CreatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 269, DateTimeKind.Local).AddTicks(3716),
                            Name = "Financials",
                            UpdatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 269, DateTimeKind.Local).AddTicks(3717)
                        },
                        new
                        {
                            Id = new Guid("a9d573c6-64ae-41d9-9cf4-7c57579f605b"),
                            CreatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 269, DateTimeKind.Local).AddTicks(3718),
                            Name = "Energy",
                            UpdatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 269, DateTimeKind.Local).AddTicks(3719)
                        },
                        new
                        {
                            Id = new Guid("3903f7df-789d-4308-a534-fff96cabc069"),
                            CreatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 269, DateTimeKind.Local).AddTicks(3720),
                            Name = "Consumer Discretionary",
                            UpdatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 269, DateTimeKind.Local).AddTicks(3721)
                        },
                        new
                        {
                            Id = new Guid("26fa0a1f-7c4c-4648-8258-cecc43d20ede"),
                            CreatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 269, DateTimeKind.Local).AddTicks(3722),
                            Name = "Information Technology",
                            UpdatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 269, DateTimeKind.Local).AddTicks(3723)
                        },
                        new
                        {
                            Id = new Guid("861fb2f2-dff6-4d2b-8c1d-c6d2dfef7fe8"),
                            CreatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 269, DateTimeKind.Local).AddTicks(3725),
                            Name = "Communication Services",
                            UpdatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 269, DateTimeKind.Local).AddTicks(3726)
                        },
                        new
                        {
                            Id = new Guid("9f6b538c-d2b7-46ef-bdd0-122593da42c3"),
                            CreatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 269, DateTimeKind.Local).AddTicks(3727),
                            Name = "Real Estate",
                            UpdatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 269, DateTimeKind.Local).AddTicks(3728)
                        },
                        new
                        {
                            Id = new Guid("ac3df7c9-791b-4285-8d65-19c86cdd1c03"),
                            CreatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 269, DateTimeKind.Local).AddTicks(3731),
                            Name = "Health Care",
                            UpdatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 269, DateTimeKind.Local).AddTicks(3732)
                        },
                        new
                        {
                            Id = new Guid("3566f3e1-780a-4234-8648-86a6a6fdc8fe"),
                            CreatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 269, DateTimeKind.Local).AddTicks(3733),
                            Name = "Consumer Staples",
                            UpdatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 269, DateTimeKind.Local).AddTicks(3734)
                        },
                        new
                        {
                            Id = new Guid("b51fa26b-b6aa-434e-94ee-ffc88d794f3f"),
                            CreatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 269, DateTimeKind.Local).AddTicks(3735),
                            Name = "Utilities",
                            UpdatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 269, DateTimeKind.Local).AddTicks(3736)
                        });
                });

            modelBuilder.Entity("Domain.Entities.Entrace", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Observation")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Ticker")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.Property<Guid?>("WalletId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("WalletId");

                    b.ToTable("Entrace");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("430e0144-289f-4a95-8f14-bacfabb3fe8a"),
                            CreatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 134, DateTimeKind.Local).AddTicks(8845),
                            Email = "admin@admin.com",
                            Name = "Admin",
                            Password = "$2a$11$kLvYepUxV8Dooy/9KVzFueZwJAZC3.T6wgQXnQk/gUJlxV8uDh86.",
                            UpdatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 135, DateTimeKind.Local).AddTicks(7965)
                        },
                        new
                        {
                            Id = new Guid("cb43d078-87f1-4864-853a-e626922b8109"),
                            CreatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 266, DateTimeKind.Local).AddTicks(6640),
                            Email = "testUser01@email.com",
                            Name = "Test-User-01",
                            Password = "$2a$11$pDQDnIcl7p83zKihK8RnYOXDtWDB5DFeMU81nSzH2cK0JRDrJB6mq",
                            UpdatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 266, DateTimeKind.Local).AddTicks(6664)
                        });
                });

            modelBuilder.Entity("Domain.Entities.Wallet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CloseDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("CurrentValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("WalletTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("WalletTypeId");

                    b.ToTable("Wallet");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2d4561b2-0f67-4c96-b0df-e5d1968eaa89"),
                            CloseDate = new DateTime(2021, 4, 15, 11, 28, 9, 268, DateTimeKind.Local).AddTicks(8268),
                            CreatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 268, DateTimeKind.Local).AddTicks(8937),
                            CurrentValue = 500.0,
                            Description = "Main Account",
                            DueDate = new DateTime(2021, 4, 30, 11, 28, 9, 268, DateTimeKind.Local).AddTicks(8564),
                            Name = "Inter",
                            UpdatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 268, DateTimeKind.Local).AddTicks(8940)
                        },
                        new
                        {
                            Id = new Guid("1d9c851a-ff0b-46a0-bcb8-6ad43f4da0d0"),
                            CloseDate = new DateTime(2021, 4, 15, 11, 28, 9, 268, DateTimeKind.Local).AddTicks(8959),
                            CreatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 268, DateTimeKind.Local).AddTicks(8965),
                            CurrentValue = 500.0,
                            Description = "Credit Card Account",
                            DueDate = new DateTime(2021, 4, 30, 11, 28, 9, 268, DateTimeKind.Local).AddTicks(8960),
                            Name = "Credit",
                            UpdatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 268, DateTimeKind.Local).AddTicks(8966)
                        });
                });

            modelBuilder.Entity("Domain.Entities.WalletType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("WalletType");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ad4ac47f-0888-4d60-81f9-964153b13e37"),
                            CreatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 268, DateTimeKind.Local).AddTicks(2578),
                            Name = "Checking Account",
                            UpdatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 268, DateTimeKind.Local).AddTicks(2590)
                        },
                        new
                        {
                            Id = new Guid("ad4ac47f-0888-4d60-81f9-964153b13e38"),
                            CreatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 268, DateTimeKind.Local).AddTicks(2951),
                            Name = "Credit",
                            UpdatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 268, DateTimeKind.Local).AddTicks(2954)
                        },
                        new
                        {
                            Id = new Guid("ad4ac47f-0888-4d60-81f9-964153b13e39"),
                            CreatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 268, DateTimeKind.Local).AddTicks(3259),
                            Name = "Saving",
                            UpdatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 268, DateTimeKind.Local).AddTicks(3262)
                        },
                        new
                        {
                            Id = new Guid("ad4ac47f-0888-4d60-81f9-964153b13e40"),
                            CreatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 268, DateTimeKind.Local).AddTicks(3548),
                            Name = "Investiments",
                            UpdatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 268, DateTimeKind.Local).AddTicks(3551)
                        },
                        new
                        {
                            Id = new Guid("ad4ac47f-0888-4d60-81f9-964153b13e41"),
                            CreatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 268, DateTimeKind.Local).AddTicks(3828),
                            Name = "Stocks",
                            UpdatedAt = new DateTime(2021, 4, 15, 11, 28, 9, 268, DateTimeKind.Local).AddTicks(3831)
                        });
                });

            modelBuilder.Entity("Domain.Entities.Category", b =>
                {
                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("Categories")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Entrace", b =>
                {
                    b.HasOne("Domain.Entities.Category", "Category")
                        .WithMany("Entraces")
                        .HasForeignKey("CategoryId");

                    b.HasOne("Domain.Entities.Wallet", "Wallet")
                        .WithMany("Entraces")
                        .HasForeignKey("WalletId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Category");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("Domain.Entities.Wallet", b =>
                {
                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("Wallets")
                        .HasForeignKey("UserId");

                    b.HasOne("Domain.Entities.WalletType", "WalletType")
                        .WithMany("Wallets")
                        .HasForeignKey("WalletTypeId");

                    b.Navigation("User");

                    b.Navigation("WalletType");
                });

            modelBuilder.Entity("Domain.Entities.Category", b =>
                {
                    b.Navigation("Entraces");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Wallets");
                });

            modelBuilder.Entity("Domain.Entities.Wallet", b =>
                {
                    b.Navigation("Entraces");
                });

            modelBuilder.Entity("Domain.Entities.WalletType", b =>
                {
                    b.Navigation("Wallets");
                });
#pragma warning restore 612, 618
        }
    }
}
