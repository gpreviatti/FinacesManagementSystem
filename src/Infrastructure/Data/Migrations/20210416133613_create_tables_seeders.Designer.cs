// <auto-generated />
using System;
using Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Data.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20210416133613_create_tables_seeders")]
    partial class create_tables_seeders
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d2da5a0d-4e39-4dcf-bce0-d8e8981ff00b"),
                            CreatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 886, DateTimeKind.Local).AddTicks(6668),
                            Name = "Salary",
                            UpdatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 886, DateTimeKind.Local).AddTicks(6673)
                        },
                        new
                        {
                            Id = new Guid("9a05a596-37a6-4405-abdc-2923108df5b9"),
                            CreatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 886, DateTimeKind.Local).AddTicks(6691),
                            Name = "Loans",
                            UpdatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 886, DateTimeKind.Local).AddTicks(6692)
                        },
                        new
                        {
                            Id = new Guid("e68fc136-5351-4ec5-ad4f-75a670ae8a76"),
                            CreatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 886, DateTimeKind.Local).AddTicks(6694),
                            Name = "Other Earnings",
                            UpdatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 886, DateTimeKind.Local).AddTicks(6695)
                        },
                        new
                        {
                            Id = new Guid("41ccdcd6-44cb-4968-ba0a-fb120af5a9ed"),
                            CreatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 886, DateTimeKind.Local).AddTicks(6706),
                            Name = "Investiments",
                            UpdatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 886, DateTimeKind.Local).AddTicks(6707)
                        },
                        new
                        {
                            Id = new Guid("ead01912-ea50-46ea-9755-4a484f2b00ce"),
                            CreatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 886, DateTimeKind.Local).AddTicks(6708),
                            Name = "Food",
                            UpdatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 886, DateTimeKind.Local).AddTicks(6709)
                        },
                        new
                        {
                            Id = new Guid("954e872b-4b54-4bbc-b616-805d47891ce4"),
                            CreatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 886, DateTimeKind.Local).AddTicks(6713),
                            Name = "Transport",
                            UpdatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 886, DateTimeKind.Local).AddTicks(6713)
                        },
                        new
                        {
                            Id = new Guid("693d4c02-ba7d-4cd7-b065-87c410bda335"),
                            CreatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 886, DateTimeKind.Local).AddTicks(6715),
                            Name = "Services",
                            UpdatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 886, DateTimeKind.Local).AddTicks(6715)
                        },
                        new
                        {
                            Id = new Guid("5fa730e2-3d56-4f93-bc73-578eacbd80ad"),
                            CreatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 886, DateTimeKind.Local).AddTicks(6717),
                            Name = "Health",
                            UpdatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 886, DateTimeKind.Local).AddTicks(6718)
                        },
                        new
                        {
                            Id = new Guid("908ea658-beb9-40ef-8385-e1879859b989"),
                            CreatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 886, DateTimeKind.Local).AddTicks(6719),
                            Name = "Education",
                            UpdatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 886, DateTimeKind.Local).AddTicks(6720)
                        },
                        new
                        {
                            Id = new Guid("0eb72c2e-00c7-45a7-b478-c2215df7546d"),
                            CreatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 886, DateTimeKind.Local).AddTicks(6722),
                            Name = "Travel",
                            UpdatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 886, DateTimeKind.Local).AddTicks(6723)
                        },
                        new
                        {
                            Id = new Guid("771a1988-82dc-46ef-baab-815516a5993e"),
                            CreatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 886, DateTimeKind.Local).AddTicks(6724),
                            Name = "Work",
                            UpdatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 886, DateTimeKind.Local).AddTicks(6725)
                        },
                        new
                        {
                            Id = new Guid("7e5e1056-3da8-4e20-9f41-cfd58a1bab4e"),
                            CreatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 886, DateTimeKind.Local).AddTicks(6728),
                            Name = "Gifts",
                            UpdatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 886, DateTimeKind.Local).AddTicks(6729)
                        },
                        new
                        {
                            Id = new Guid("a43165fa-8403-42ed-ab4b-c1686959d834"),
                            CreatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 886, DateTimeKind.Local).AddTicks(6730),
                            Name = "Industrials",
                            UpdatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 886, DateTimeKind.Local).AddTicks(6731)
                        },
                        new
                        {
                            Id = new Guid("2dd31216-134d-4737-81df-e388349bc2f8"),
                            CreatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 886, DateTimeKind.Local).AddTicks(6732),
                            Name = "Financials",
                            UpdatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 886, DateTimeKind.Local).AddTicks(6733)
                        },
                        new
                        {
                            Id = new Guid("eb4f5e89-8743-4e77-bb05-cf293ed7f207"),
                            CreatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 886, DateTimeKind.Local).AddTicks(6734),
                            Name = "Energy",
                            UpdatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 886, DateTimeKind.Local).AddTicks(6735)
                        },
                        new
                        {
                            Id = new Guid("f4eff17e-a76e-45ee-843f-f18b00a62b5d"),
                            CreatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 886, DateTimeKind.Local).AddTicks(6736),
                            Name = "Consumer Discretionary",
                            UpdatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 886, DateTimeKind.Local).AddTicks(6737)
                        },
                        new
                        {
                            Id = new Guid("a63a4987-b4bf-4025-ad1b-0d61626267e0"),
                            CreatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 886, DateTimeKind.Local).AddTicks(6738),
                            Name = "Information Technology",
                            UpdatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 886, DateTimeKind.Local).AddTicks(6739)
                        },
                        new
                        {
                            Id = new Guid("94531a8b-e6be-47bb-bc7b-3adc4dde6477"),
                            CreatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 886, DateTimeKind.Local).AddTicks(6741),
                            Name = "Communication Services",
                            UpdatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 886, DateTimeKind.Local).AddTicks(6742)
                        },
                        new
                        {
                            Id = new Guid("4aadf1ce-8506-4aba-9548-a05c7ce80868"),
                            CreatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 886, DateTimeKind.Local).AddTicks(6743),
                            Name = "Real Estate",
                            UpdatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 886, DateTimeKind.Local).AddTicks(6744)
                        },
                        new
                        {
                            Id = new Guid("1e841727-59fb-46a6-9cd9-55d0dfc3d4cc"),
                            CreatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 886, DateTimeKind.Local).AddTicks(6747),
                            Name = "Health Care",
                            UpdatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 886, DateTimeKind.Local).AddTicks(6747)
                        },
                        new
                        {
                            Id = new Guid("ce1cdadb-9815-4fc8-ae8f-24a058061485"),
                            CreatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 886, DateTimeKind.Local).AddTicks(6749),
                            Name = "Consumer Staples",
                            UpdatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 886, DateTimeKind.Local).AddTicks(6750)
                        },
                        new
                        {
                            Id = new Guid("cb85e762-1b4d-476d-a1dc-93e0600686e8"),
                            CreatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 886, DateTimeKind.Local).AddTicks(6751),
                            Name = "Utilities",
                            UpdatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 886, DateTimeKind.Local).AddTicks(6752)
                        });
                });

            modelBuilder.Entity("Domain.Entities.Entrace", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Observation")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Ticker")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.Property<Guid?>("WalletId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("WalletId");

                    b.ToTable("Entraces");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("430e0144-289f-4a95-8f14-bacfabb3fe8a"),
                            CreatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 755, DateTimeKind.Local).AddTicks(1294),
                            Email = "admin@admin.com",
                            Name = "Admin",
                            Password = "$2a$11$0W.jIZlK4WSgGPrsyCFQIeXo8m1RNEqC6R42rVlffpKGhwgVmdzKS",
                            UpdatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 755, DateTimeKind.Local).AddTicks(9568)
                        },
                        new
                        {
                            Id = new Guid("cb43d078-87f1-4864-853a-e626922b8109"),
                            CreatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 884, DateTimeKind.Local).AddTicks(293),
                            Email = "testUser01@email.com",
                            Name = "Test-User-01",
                            Password = "$2a$11$cbFXzbtBafCVHDCwy7eOj.hXYpjpeb7cObKBOOXu7DfzSRVX94Hw6",
                            UpdatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 884, DateTimeKind.Local).AddTicks(319)
                        });
                });

            modelBuilder.Entity("Domain.Entities.Wallet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CloseDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("CurrentValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("WalletTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("WalletTypeId");

                    b.ToTable("Wallets");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00a418bd-7649-4997-ad8f-915c952899c0"),
                            CloseDate = new DateTime(2021, 4, 16, 10, 36, 12, 886, DateTimeKind.Local).AddTicks(1725),
                            CreatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 886, DateTimeKind.Local).AddTicks(2373),
                            CurrentValue = 500.0,
                            Description = "Main Account",
                            DueDate = new DateTime(2021, 5, 1, 10, 36, 12, 886, DateTimeKind.Local).AddTicks(2016),
                            Name = "Inter",
                            UpdatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 886, DateTimeKind.Local).AddTicks(2376)
                        },
                        new
                        {
                            Id = new Guid("8ddfdfa9-0fd7-4d03-bfb7-b715622e9891"),
                            CloseDate = new DateTime(2021, 4, 16, 10, 36, 12, 886, DateTimeKind.Local).AddTicks(2395),
                            CreatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 886, DateTimeKind.Local).AddTicks(2401),
                            CurrentValue = 500.0,
                            Description = "Credit Card Account",
                            DueDate = new DateTime(2021, 5, 1, 10, 36, 12, 886, DateTimeKind.Local).AddTicks(2396),
                            Name = "Credit",
                            UpdatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 886, DateTimeKind.Local).AddTicks(2402)
                        });
                });

            modelBuilder.Entity("Domain.Entities.WalletType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("WalletTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ad4ac47f-0888-4d60-81f9-964153b13e37"),
                            CreatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 885, DateTimeKind.Local).AddTicks(5987),
                            Name = "Checking Account",
                            UpdatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 885, DateTimeKind.Local).AddTicks(5996)
                        },
                        new
                        {
                            Id = new Guid("ad4ac47f-0888-4d60-81f9-964153b13e38"),
                            CreatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 885, DateTimeKind.Local).AddTicks(6352),
                            Name = "Credit",
                            UpdatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 885, DateTimeKind.Local).AddTicks(6356)
                        },
                        new
                        {
                            Id = new Guid("ad4ac47f-0888-4d60-81f9-964153b13e39"),
                            CreatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 885, DateTimeKind.Local).AddTicks(6661),
                            Name = "Saving",
                            UpdatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 885, DateTimeKind.Local).AddTicks(6664)
                        },
                        new
                        {
                            Id = new Guid("ad4ac47f-0888-4d60-81f9-964153b13e40"),
                            CreatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 885, DateTimeKind.Local).AddTicks(6950),
                            Name = "Investiments",
                            UpdatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 885, DateTimeKind.Local).AddTicks(6952)
                        },
                        new
                        {
                            Id = new Guid("ad4ac47f-0888-4d60-81f9-964153b13e41"),
                            CreatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 885, DateTimeKind.Local).AddTicks(7252),
                            Name = "Stocks",
                            UpdatedAt = new DateTime(2021, 4, 16, 10, 36, 12, 885, DateTimeKind.Local).AddTicks(7254)
                        });
                });

            modelBuilder.Entity("Domain.Entities.Category", b =>
                {
                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("Categories")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Entrace", b =>
                {
                    b.HasOne("Domain.Entities.Category", "Category")
                        .WithMany("Entraces")
                        .HasForeignKey("CategoryId");

                    b.HasOne("Domain.Entities.Wallet", "Wallet")
                        .WithMany("Entraces")
                        .HasForeignKey("WalletId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Category");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("Domain.Entities.Wallet", b =>
                {
                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("Wallets")
                        .HasForeignKey("UserId");

                    b.HasOne("Domain.Entities.WalletType", "WalletType")
                        .WithMany("Wallets")
                        .HasForeignKey("WalletTypeId");

                    b.Navigation("User");

                    b.Navigation("WalletType");
                });

            modelBuilder.Entity("Domain.Entities.Category", b =>
                {
                    b.Navigation("Entraces");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Wallets");
                });

            modelBuilder.Entity("Domain.Entities.Wallet", b =>
                {
                    b.Navigation("Entraces");
                });

            modelBuilder.Entity("Domain.Entities.WalletType", b =>
                {
                    b.Navigation("Wallets");
                });
#pragma warning restore 612, 618
        }
    }
}
