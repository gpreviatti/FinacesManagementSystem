// <auto-generated />
using System;
using Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20210415005247_create_tables_seeders")]
    partial class create_tables_seeders
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0d7dbf5e-4009-499f-b589-b0d7ceb0910f"),
                            CreatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 582, DateTimeKind.Local).AddTicks(5074),
                            Name = "Salary",
                            UpdatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 582, DateTimeKind.Local).AddTicks(5078),
                            UserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("3162d7eb-0965-4725-bf19-c5e7a5b8eb4a"),
                            CreatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 582, DateTimeKind.Local).AddTicks(5094),
                            Name = "Loans",
                            UpdatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 582, DateTimeKind.Local).AddTicks(5095),
                            UserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("95ace88d-8237-4c32-bee9-650ee9a5cf34"),
                            CreatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 582, DateTimeKind.Local).AddTicks(5097),
                            Name = "Other Earnings",
                            UpdatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 582, DateTimeKind.Local).AddTicks(5098),
                            UserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("626fd70e-f5d5-43a1-99ff-6bf486c9351f"),
                            CreatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 582, DateTimeKind.Local).AddTicks(5099),
                            Name = "Investiments",
                            UpdatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 582, DateTimeKind.Local).AddTicks(5100),
                            UserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("c7d07c09-3540-4406-9485-eaf61ca48f1b"),
                            CreatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 582, DateTimeKind.Local).AddTicks(5101),
                            Name = "Food",
                            UpdatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 582, DateTimeKind.Local).AddTicks(5102),
                            UserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("64330374-60b0-4eee-b8de-439b6f1af7c2"),
                            CreatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 582, DateTimeKind.Local).AddTicks(5106),
                            Name = "Transport",
                            UpdatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 582, DateTimeKind.Local).AddTicks(5106),
                            UserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("471ebcc8-9af6-4379-8c46-d21724a665f4"),
                            CreatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 582, DateTimeKind.Local).AddTicks(5108),
                            Name = "Services",
                            UpdatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 582, DateTimeKind.Local).AddTicks(5109),
                            UserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("1c67f047-9043-4c63-af03-c179bd2714b4"),
                            CreatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 582, DateTimeKind.Local).AddTicks(5110),
                            Name = "Health",
                            UpdatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 582, DateTimeKind.Local).AddTicks(5111),
                            UserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("e658b1fc-4b52-489d-a6b5-d21449519f58"),
                            CreatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 582, DateTimeKind.Local).AddTicks(5115),
                            Name = "Education",
                            UpdatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 582, DateTimeKind.Local).AddTicks(5116),
                            UserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("75d8a548-517d-4379-b303-b54dc4867e09"),
                            CreatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 582, DateTimeKind.Local).AddTicks(5118),
                            Name = "Travel",
                            UpdatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 582, DateTimeKind.Local).AddTicks(5119),
                            UserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("d774576f-6692-402a-8d8a-af949d1a8f15"),
                            CreatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 582, DateTimeKind.Local).AddTicks(5120),
                            Name = "Work",
                            UpdatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 582, DateTimeKind.Local).AddTicks(5121),
                            UserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("52a1be5f-345b-4d0b-986d-8e24583e829a"),
                            CreatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 582, DateTimeKind.Local).AddTicks(5122),
                            Name = "Gifts",
                            UpdatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 582, DateTimeKind.Local).AddTicks(5123),
                            UserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("f881a742-9fbe-4a4d-aef3-21a9af7576c7"),
                            CreatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 582, DateTimeKind.Local).AddTicks(5124),
                            Name = "Industrials",
                            UpdatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 582, DateTimeKind.Local).AddTicks(5125),
                            UserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("d7a37597-f9a9-4b17-a546-9b06f6e48212"),
                            CreatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 582, DateTimeKind.Local).AddTicks(5127),
                            Name = "Financials",
                            UpdatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 582, DateTimeKind.Local).AddTicks(5127),
                            UserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("9505b4e1-1851-4609-bbe4-f784c49e0c16"),
                            CreatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 582, DateTimeKind.Local).AddTicks(5129),
                            Name = "Energy",
                            UpdatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 582, DateTimeKind.Local).AddTicks(5129),
                            UserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("c44eb8f4-cc0b-4da9-aa1c-0e40eef337cc"),
                            CreatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 582, DateTimeKind.Local).AddTicks(5131),
                            Name = "Consumer Discretionary",
                            UpdatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 582, DateTimeKind.Local).AddTicks(5131),
                            UserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("495b8d84-644d-4422-bb14-9ac165f5e435"),
                            CreatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 582, DateTimeKind.Local).AddTicks(5134),
                            Name = "Information Technology",
                            UpdatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 582, DateTimeKind.Local).AddTicks(5135),
                            UserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("ae8f94ba-2342-42ac-b2a6-1da18904816d"),
                            CreatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 582, DateTimeKind.Local).AddTicks(5137),
                            Name = "Communication Services",
                            UpdatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 582, DateTimeKind.Local).AddTicks(5138),
                            UserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("1265c47c-3ff4-43a3-8e85-e1c6f6396866"),
                            CreatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 582, DateTimeKind.Local).AddTicks(5139),
                            Name = "Real Estate",
                            UpdatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 582, DateTimeKind.Local).AddTicks(5140),
                            UserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("e866518f-b231-4d89-ae7f-dfb9e8326167"),
                            CreatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 582, DateTimeKind.Local).AddTicks(5141),
                            Name = "Health Care",
                            UpdatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 582, DateTimeKind.Local).AddTicks(5142),
                            UserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("f958b89a-d094-4183-a5f9-46e5e86b7f87"),
                            CreatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 582, DateTimeKind.Local).AddTicks(5143),
                            Name = "Consumer Staples",
                            UpdatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 582, DateTimeKind.Local).AddTicks(5144),
                            UserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("738f7b4a-dae7-43f8-bf7f-3b243afad497"),
                            CreatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 582, DateTimeKind.Local).AddTicks(5146),
                            Name = "Utilities",
                            UpdatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 582, DateTimeKind.Local).AddTicks(5146),
                            UserId = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Domain.Entities.Entrace", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Observation")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Ticker")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.Property<Guid>("WalletId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("WalletId");

                    b.ToTable("Entrace");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("430e0144-289f-4a95-8f14-bacfabb3fe8a"),
                            CreatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 449, DateTimeKind.Local).AddTicks(2020),
                            Email = "admin@admin.com",
                            Name = "Admin",
                            Password = "$2a$11$p/DG0Ns5IKvaQunbEDtdPO6exntYhOQTzNaqyqObVz8kZFAI79ts6",
                            UpdatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 450, DateTimeKind.Local).AddTicks(100)
                        },
                        new
                        {
                            Id = new Guid("cb43d078-87f1-4864-853a-e626922b8109"),
                            CreatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 579, DateTimeKind.Local).AddTicks(5918),
                            Email = "testUser01@email.com",
                            Name = "Test-User-01",
                            Password = "$2a$11$o6FUlQTStiQqwCCcYjz9L.f/NEnISVt8J/8WiL900ArA60vpArtZK",
                            UpdatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 579, DateTimeKind.Local).AddTicks(5938)
                        });
                });

            modelBuilder.Entity("Domain.Entities.Wallet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CloseDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("CurrentValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WalletTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("WalletTypeId");

                    b.ToTable("Wallet");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bba1811c-2384-49dc-950c-3418219c65fe"),
                            CloseDate = new DateTime(2021, 4, 14, 21, 52, 46, 581, DateTimeKind.Local).AddTicks(9730),
                            CreatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 582, DateTimeKind.Local).AddTicks(666),
                            CurrentValue = 500.0,
                            Description = "Main Account",
                            DueDate = new DateTime(2021, 4, 29, 21, 52, 46, 582, DateTimeKind.Local).AddTicks(27),
                            Name = "Inter",
                            UpdatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 582, DateTimeKind.Local).AddTicks(670),
                            UserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            WalletTypeId = new Guid("ad4ac47f-0888-4d60-81f9-964153b13e37")
                        },
                        new
                        {
                            Id = new Guid("bfa4b9cb-417f-45fd-82b0-039b1582e0ea"),
                            CloseDate = new DateTime(2021, 4, 14, 21, 52, 46, 582, DateTimeKind.Local).AddTicks(692),
                            CreatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 582, DateTimeKind.Local).AddTicks(701),
                            CurrentValue = 500.0,
                            Description = "Credit Card Account",
                            DueDate = new DateTime(2021, 4, 29, 21, 52, 46, 582, DateTimeKind.Local).AddTicks(693),
                            Name = "Credit",
                            UpdatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 582, DateTimeKind.Local).AddTicks(701),
                            UserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            WalletTypeId = new Guid("ad4ac47f-0888-4d60-81f9-964153b13e38")
                        });
                });

            modelBuilder.Entity("Domain.Entities.WalletType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("WalletType");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ad4ac47f-0888-4d60-81f9-964153b13e37"),
                            CreatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 581, DateTimeKind.Local).AddTicks(1928),
                            Name = "Checking Account",
                            UpdatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 581, DateTimeKind.Local).AddTicks(1979)
                        },
                        new
                        {
                            Id = new Guid("ad4ac47f-0888-4d60-81f9-964153b13e38"),
                            CreatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 581, DateTimeKind.Local).AddTicks(2663),
                            Name = "Credit",
                            UpdatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 581, DateTimeKind.Local).AddTicks(2665)
                        },
                        new
                        {
                            Id = new Guid("ad4ac47f-0888-4d60-81f9-964153b13e39"),
                            CreatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 581, DateTimeKind.Local).AddTicks(2975),
                            Name = "Saving",
                            UpdatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 581, DateTimeKind.Local).AddTicks(2978)
                        },
                        new
                        {
                            Id = new Guid("ad4ac47f-0888-4d60-81f9-964153b13e40"),
                            CreatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 581, DateTimeKind.Local).AddTicks(3603),
                            Name = "Investiments",
                            UpdatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 581, DateTimeKind.Local).AddTicks(3605)
                        },
                        new
                        {
                            Id = new Guid("ad4ac47f-0888-4d60-81f9-964153b13e41"),
                            CreatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 581, DateTimeKind.Local).AddTicks(3887),
                            Name = "Stocks",
                            UpdatedAt = new DateTime(2021, 4, 14, 21, 52, 46, 581, DateTimeKind.Local).AddTicks(3889)
                        });
                });

            modelBuilder.Entity("Domain.Entities.Category", b =>
                {
                    b.HasOne("Domain.Entities.User", null)
                        .WithMany("Categories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Entrace", b =>
                {
                    b.HasOne("Domain.Entities.Category", null)
                        .WithMany("Entraces")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Wallet", null)
                        .WithMany("Entraces")
                        .HasForeignKey("WalletId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Wallet", b =>
                {
                    b.HasOne("Domain.Entities.User", null)
                        .WithMany("Wallets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.WalletType", "WalletType")
                        .WithMany()
                        .HasForeignKey("WalletTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WalletType");
                });

            modelBuilder.Entity("Domain.Entities.Category", b =>
                {
                    b.Navigation("Entraces");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Wallets");
                });

            modelBuilder.Entity("Domain.Entities.Wallet", b =>
                {
                    b.Navigation("Entraces");
                });
#pragma warning restore 612, 618
        }
    }
}
