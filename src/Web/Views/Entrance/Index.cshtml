@model IEnumerable<Domain.Dtos.Entrance.EntranceResultDto>

@{
    ViewData["Title"] = "Entrances";
}

@Html.ActionLink("Create Entrance", "Create", null, htmlAttributes: new { @class = "btn btn-primary btn-sm btn-block mb-3" })

<div class="mb-3 col-lg-12">
    <form asp-action="Index">
        <div class="form-group">
            <label class="control-label">Search</label>
            <input type="text" name="searchString" class="form-control-sm col-lg-12 mb-3" autofocus="autofocus" />
        </div>
        <div class="form-group">
            <input type="submit" class="btn btn-primary btn-block col-lg-12 mb-3 btn-sm" value="Filter" />
        </div>
    </form>
</div>

<table class="table table-striped">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="Description">@Html.DisplayNameFor(model => model.Description)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="Type">@Html.DisplayNameFor(model => model.Type)</a>

            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="Value">@Html.DisplayNameFor(model => model.Value)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="Category">@Html.DisplayNameFor(model => model.Category)</a>
            </th>
            <th>
                <a asp-action="Index">@Html.DisplayNameFor(model => model.CreatedAt)</a>
            </th>
            <th></th>
        </tr>
    </thead>
    @if (Model != null && Model.Any())
    {
        <tbody>
            @foreach (var item in Model)
            {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @{
                        switch (item.Type)
                        {
                            case 1:
                                @Html.Label("", "Income", htmlAttributes: new { @class = "badge badge-pill badge-success" });
                                break;
                            case 2:
                                @Html.Label("", "Expanse", htmlAttributes: new { @class = "badge badge-pill badge-danger" });
                                break;
                            default:
                                @Html.Label("", "Unknown", htmlAttributes: new { @class = "badge badge-pill badge-secondary" });
                                break;
                        }
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Value)
                </td>
                <td>
                    @Html.Label("", item.Category.Name, htmlAttributes: new { @class = "badge badge-pill badge-primary" })
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreatedAt)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", "Entrance", new { id = item.Id }, htmlAttributes: new { @class = "btn btn-primary btn-sm" })
                </td>
            </tr>
            }
        </tbody>
    }
</table>
