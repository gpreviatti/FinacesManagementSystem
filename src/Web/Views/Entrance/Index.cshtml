@model Web.ViewModels.Entrance.EntraceResultViewModel

@{
    ViewData["Title"] = "Entrances";
}

@Html.ActionLink("Create Entrance", "Create", null, htmlAttributes: new { @class = "btn btn-primary btn-sm btn-block mb-2" })

<div class="mb-3 col-lg-12">
    <div>
        <form asp-action="Index">
            <div class="row">
                <label class="control-label">Search</label>
            </div>
            <div class="row">
                <input type="text" name="searchString" class="form-control-sm col-lg-12 mb-3" autofocus="autofocus" />
            </div>
            <div class="row">
                <input type="submit" class="btn btn-primary btn-block col-lg-12 mb-3 btn-sm" value="Filter" />
            </div>
        </form>
    </div>
    <div class="row">
        <div class="col-lg-6">
            Current Page: @Html.DisplayFor(model => model.PaginationModel.CurrentPage) |
            Total Pages: @Html.DisplayFor(model => model.PaginationModel.TotalPages) |
            Total Itens Filtred: @Html.DisplayFor(model => model.PaginationModel.Count)
        </div>
        <ul class="pagination col-lg-4">
            @if (Model.PaginationModel.ShowPrevious)
            {
                <li class="page-item">
                    <a asp-action="Index" asp-route-currentPage="@(Model.PaginationModel.CurrentPage -1)" class="page-link">Previous</a>
                </li>
            }
            @if (Model.PaginationModel.ShowNext)
            {
                <li class="page-item">
                    <a asp-action="Index" asp-route-currentPage="@(Model.PaginationModel.CurrentPage + 1)" class="page-link">Next</a>
                </li>
            }
        </ul>
    </div>
</div>

<table class="table table-striped">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="Description">@Html.DisplayNameFor(model => model.PaginationModel.Data.FirstOrDefault().Description)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="Type">@Html.DisplayNameFor(model => model.PaginationModel.Data.FirstOrDefault().Type)</a>

            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="Value">@Html.DisplayNameFor(model => model.PaginationModel.Data.FirstOrDefault().Value)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="Category">@Html.DisplayNameFor(model => model.PaginationModel.Data.FirstOrDefault().Category)</a>
            </th>
            <th>
                <a asp-action="Index">@Html.DisplayNameFor(model => model.PaginationModel.Data.FirstOrDefault().CreatedAt)</a>
            </th>
            <th></th>
        </tr>
    </thead>
    @if (Model != null && Model.PaginationModel.Data.Any())
    {
        <tbody>
            @foreach (var item in Model.PaginationModel.Data)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @{
                            switch (item.Type)
                            {
                                case 1:
                                    @Html.Label("", "Income", htmlAttributes: new { @class = "badge badge-pill badge-success" });
                                    break;
                                case 2:
                                    @Html.Label("", "Expanse", htmlAttributes: new { @class = "badge badge-pill badge-danger" });
                                    break;
                                default:
                                    @Html.Label("", "Unknown", htmlAttributes: new { @class = "badge badge-pill badge-secondary" });
                                    break;
                            }
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Value)
                    </td>
                    <td>
                        @Html.Label("", item.Category.Name, htmlAttributes: new { @class = "badge badge-pill badge-primary" })
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CreatedAt)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", "Entrance", new { id = item.Id }, htmlAttributes: new { @class = "btn btn-primary btn-sm" })
                    </td>
                </tr>
            }
        </tbody>
    }
</table>
