@model Web.ViewModels.Entrance.EntranceResultViewModel

@{
    ViewData["Title"] = "Entrances";
}

<link href="~/lib/datatables/css/jquery.dataTables.css" rel="stylesheet" />
<link href="~/lib/datatables/css/jquery.dataTables_themeroller.css" rel="stylesheet" />

@Html.ActionLink("Create Entrance", "Create", null, htmlAttributes: new { @class = "btn btn-primary btn-sm btn-block mb-2" })

@*<table class="table table-striped">
        <thead>
            <tr>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="Description">@Html.DisplayNameFor(model => model.PaginationModel.Data.FirstOrDefault().Description)</a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="Type">@Html.DisplayNameFor(model => model.PaginationModel.Data.FirstOrDefault().Type)</a>

                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="Value">@Html.DisplayNameFor(model => model.PaginationModel.Data.FirstOrDefault().Value)</a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="Category">@Html.DisplayNameFor(model => model.PaginationModel.Data.FirstOrDefault().Category)</a>
                </th>
                <th>
                    <a asp-action="Index">@Html.DisplayNameFor(model => model.PaginationModel.Data.FirstOrDefault().CreatedAt)</a>
                </th>
                <th></th>
            </tr>
        </thead>
        @if (Model != null && Model.PaginationModel.Data.Any())
        {
            <tbody>
                @foreach (var item in Model.PaginationModel.Data)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Description)
                        </td>
                        <td>
                            @{
                                switch (item.Type)
                                {
                                    case 1:
                                        @Html.Label("", "Income", htmlAttributes: new { @class = "badge badge-pill badge-success" });
                                        break;
                                    case 2:
                                        @Html.Label("", "Expanse", htmlAttributes: new { @class = "badge badge-pill badge-danger" });
                                        break;
                                    default:
                                        @Html.Label("", "Unknown", htmlAttributes: new { @class = "badge badge-pill badge-secondary" });
                                        break;
                                }
                            }
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Value)
                        </td>
                        <td>
                            @Html.Label("", item.Category.Name, htmlAttributes: new { @class = "badge badge-pill badge-primary" })
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CreatedAt)
                        </td>
                        <td>
                            @Html.ActionLink("Edit", "Edit", "Entrance", new { id = item.Id }, htmlAttributes: new { @class = "btn btn-primary btn-sm" })
                        </td>
                    </tr>
                }
            </tbody>
        }
    </table>*@
<div class="col-lg-12 mt-3">
    <table id="datatableEntrances" class="table table-striped"></table>
</div>

@section Scripts
{
    <script src="~/lib/datatables/js/jquery.js"></script>
    <script src="~/lib/datatables/jquery.dataTables.js"></script>
    <script src="~/js/entrances.js"></script>
}
