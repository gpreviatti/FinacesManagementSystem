@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common
@model X.PagedList.IPagedList<Domain.Dtos.Category.CategoryResultDto>

@{
    ViewData["Title"] = "Categories";
}

<div class="col-lg-12 m-3">
    <canvas id="canvasCategories"></canvas>
</div>

@Html.ActionLink("Create Category", "Create", null, htmlAttributes: new { @class = "btn btn-primary btn-sm btn-block mb-3" })

<div class="mt-3">

    <div class="row mt-3 mb-3">
        @using (Html.BeginForm("Index", "Category", FormMethod.Get))
        {
            @Html.TextBox("SearchString", ViewBag.SearchString as string)
            <input type="submit" value="Search" class="btn btn-sm btn-primary"/>
        }
    </div>

    @if (Model != null && Model.Count > 0 && Model.Any())
    {
        <div class="col-lg-12">

            <table class="table">
                <tr>
                    <th>
                        @Html.ActionLink("Name", "Index", new { currentSort = ViewBag.NameSort, searchString = ViewBag.SearchString, pageSize = ViewBag.PageSize  })
                    </th>
                    <th>
                        @Html.ActionLink("Total", "Index", new { currentSort = ViewBag.TotalSort, searchString = ViewBag.SearchString, pageSize = ViewBag.PageSize  })
                    </th>
                    <th></th>
                </tr>

                @foreach (var category in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => category.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => category.Total)
                        </td>
                        <td>
                            @if (category.CategoryId != null && category.CategoryId != default(Guid))
                                @Html.ActionLink("Edit", "Edit", new { id=category.Id}, new { @class= "btn btn-sm btn-primary" })
                        </td>
                    </tr>
                }

            </table>

            <br/>

            @Html.Label("Showing " + (Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) + " to " + Model.PageCount + " of " + Model.TotalItemCount + " entries")
            
            <br/>

            @Html.PagedListPager(
                Model, 
                page => Url.Action(
                    "Index",
                    "Category", 
                    new { page, searchString = ViewBag?.SearchString, pageSize = ViewBag.PageSize }
                ), 
                new PagedListRenderOptions {                       
                    DisplayLinkToIndividualPages = true,
                    DisplayPageCountAndCurrentLocation = false,
                    MaximumPageNumbersToDisplay = 10,
                    LiElementClasses = new string[] { "page-item" },
                    PageClasses = new string[] { "page-link" },
                }
            )
        </div>
    }
</div>

@section Scripts
{
    @{await Html.RenderPartialAsync("_ChartJsScriptsPartial");}
    <script src="~/js/category.js"></script>
}